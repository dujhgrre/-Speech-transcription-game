import sounddevice as sd
import numpy as np
import scipy.io.wavfile as wav
import speech_recognition as sr
from googletrans import Translator
import random

hallo = input("–ü—Ä–∏–≤–µ—Ç—Å–≤—É—é, —ç—Ç–æ –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫/–ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —É—Å—Ç–Ω—É—é —Ä–µ—á—å –≤ —Ç–µ–∫—Å—Ç.o(*Ôø£‚ñΩÔø£*)o \n " \
"–≤—ã–±–µ—Ä–∏—Ç–µ, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É—Å—Ç–Ω—É—é —Ä–µ—á—å –≤ —Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –Ω–∞–ø–∏—à–∏—Ç–µ 1, –µ—Å–ª–∏ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç –Ω–∞ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ 2, –µ—Å–ª–∏ —É—Å—Ç–Ω—É—é —Ä–µ—á—å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –Ω–∞ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ –ø–∏—à–∏—Ç–µ 3, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø—Ä–æ—å–æ–≤–∞—Ç—å —Å—ã–≥—Ä–∞—Ç—å –≤ –∏–≥—Ä—É —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ 4:    ")


duration = 10  # —Å–µ–∫—É–Ω–¥—ã –∑–∞–ø–∏—Å–∏
sample_rate = 44100

if hallo == "1":
    print("–ì–æ–≤–æ—Ä–∏...‚î¨‚î¥‚î¨‚î¥‚î§(ÔΩ•_‚îú‚î¨‚î¥‚î¨‚î¥")
    recording = sd.rec(
                int(duration * sample_rate), # –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–∏—Å–∏ –≤ —Å—ç–º–ø–ª–∞—Ö
                samplerate=sample_rate,      # —á–∞—Å—Ç–æ—Ç–∞ –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏
                channels=1,                  # 1 ‚Äî —ç—Ç–æ –º–æ–Ω–æ
                dtype="int16")               # —Ñ–æ—Ä–º–∞—Ç –∞—É–¥–∏–æ–¥–∞–Ω–Ω—ã—Ö
    sd.wait()  # –∂–¥—ë–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏
    wav.write("output.wav", sample_rate, recording)
    print("–ó–∞–ø–∏—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∞, —Ç–µ–ø–µ—Ä—å —Ä–∞—Å–ø–æ–∑–Ω–∞—ë–º...")
    recognizer = sr.Recognizer()
    with sr.AudioFile("output.wav") as source:
        audio = recognizer.record(source)

    try:
        text = recognizer.recognize_google(audio, language="ru-RU")
        print("–¢—ã —Å–∫–∞–∑–∞–ª:", text)
    except sr.UnknownValueError:             # - –µ—Å–ª–∏ Google –Ω–µ –ø–æ–Ω—è–ª —Ä–µ—á—å (—à—É–º, –º–æ–ª—á–∞–Ω–∏–µ)
        print("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å.")
    except sr.RequestError as e:             # - –µ—Å–ª–∏ –Ω–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –∏–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
        print(f"–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞: {e}")

elif hallo == "2":
    language = input("–≤—ã–±–µ—Ä–∏ —è–∑—ã–∫, –≤–æ—Ç —Å–ø–∏—Å–æ–∫: \n"
                    "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π - en \n"
                    "–ò—Å–ø–∞–Ω—Å–∫–∏–π - es \n"
                    "–†—É—Å—Å–∫–∏–π - ru \n"
                    "–ü–æ—Ä—Ç—É–≥–∞–ª—å—Å–∫–∏–π - pt \n"
                    "–ò–Ω–¥–æ–Ω–µ–∑–∏–π—Å–∫–∏–π - id \n"
                    "–ü–æ–ª—å—Å–∫–∏–π - pl \n"
                    "–ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π - it \n"
                    "–¢—É—Ä–µ—Ü–∫–∏–π - tr \n"
                   )

    translator = Translator()
    text = input("—Å–∫–∏–Ω—å—Ç–µ –≤–∞—à —Ç–µ–∫—Å—Ç:    ")
    translated = translator.translate(text, dest=language)  # –∑–¥–µ—Å—å 'en' ‚Äî —ç—Ç–æ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π
    print("üåç –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞–º–∏ —è–∑—ã–∫:", translated.text)

elif hallo == "3":
    languages = input("–≤—ã–±–µ—Ä–∏ —è–∑—ã–∫, –≤–æ—Ç —Å–ø–∏—Å–æ–∫: \n"
                    "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π - en \n"
                    "–ò—Å–ø–∞–Ω—Å–∫–∏–π - es \n"
                    "–†—É—Å—Å–∫–∏–π - ru \n"
                    "–ü–æ—Ä—Ç—É–≥–∞–ª—å—Å–∫–∏–π - pt \n"
                    "–ò–Ω–¥–æ–Ω–µ–∑–∏–π—Å–∫–∏–π - id \n"
                    "–ü–æ–ª—å—Å–∫–∏–π - pl \n"
                    "–ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π - it \n"
                    "–¢—É—Ä–µ—Ü–∫–∏–π - tr \n"
                   )
    print("–ì–æ–≤–æ—Ä–∏...‚àë( Âè£ ||")
    recording = sd.rec(
                int(duration * sample_rate), # –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–∏—Å–∏ –≤ —Å—ç–º–ø–ª–∞—Ö
                samplerate=sample_rate,      # —á–∞—Å—Ç–æ—Ç–∞ –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏
                channels=1,                  # 1 ‚Äî —ç—Ç–æ –º–æ–Ω–æ
                dtype="int16")               # —Ñ–æ—Ä–º–∞—Ç –∞—É–¥–∏–æ–¥–∞–Ω–Ω—ã—Ö
    sd.wait()  # –∂–¥—ë–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏
    wav.write("output.wav", sample_rate, recording)
    print("–ó–∞–ø–∏—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∞, —Ç–µ–ø–µ—Ä—å —Ä–∞—Å–ø–æ–∑–Ω–∞—ë–º...")
    recognizer = sr.Recognizer()
    with sr.AudioFile("output.wav") as source:
        audio = recognizer.record(source)

    try:
        text = recognizer.recognize_google(audio, language="ru-RU")
        translator = Translator()
        translated = translator.translate(text, dest=languages)  # –∑–¥–µ—Å—å 'en' ‚Äî —ç—Ç–æ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π
        print("üåç –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞–º–∏ —è–∑—ã–∫:", translated.text)
    except sr.UnknownValueError:             # - –µ—Å–ª–∏ Google –Ω–µ –ø–æ–Ω—è–ª —Ä–µ—á—å (—à—É–º, –º–æ–ª—á–∞–Ω–∏–µ)
        print("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å.")
    except sr.RequestError as e:             # - –µ—Å–ª–∏ –Ω–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –∏–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
        print(f"–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞: {e}")


elif hallo == "4":
    couns = 0
    level1 = {"–≤—Ä–µ–º—è    ":"time", "–Ω–∞—Å—Ç–æ—è—â–µ–µ    ":"present","–ø—Ä–æ—à–ª–æ–µ    ":"past","–±—É–¥—É—â–µ–µ   ":"future","–¥–µ–Ω—å    ":"day","–Ω–æ—á—å   ":"night","–ø–æ—Å–ª–µ    ":"after","—Å–Ω–æ–≤–∞    ":"again","–≤–µ—Å–Ω–∞    ":"spring","–æ—Å–µ–Ω—å   ":"autumn",}
    level2 = {"–≤—ã–∑–æ–≤    ":"Challenge","–∑–Ω–∞–Ω–∏–µ   ":"Knowledge","–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å  ":"Opportunity","–ª–∏–¥–µ—Ä—Å—Ç–≤–æ  ":"Leadership   ","–≤–ª–∞—Å—Ç—å":"Authority   ","–ö–æ–º–∞–Ω–¥–∞  ":"Team","–î—è–¥—è  ":"Uncle","–û—Ñ–∏—Å     ":"Office","–†–µ—à–µ–Ω–∏–µ     ":" Solution","–£—Å–ø–µ—Ö    ":"Success",}
    level3 = {"–†–µ–∑—É–ª—å—Ç–∞—Ç    ":"Outcome","–ú–µ–Ω—Ç–∞–ª–∏—Ç–µ—Ç ":"Mentality","–í–µ–∑–¥–µ—Å—É—â–Ω–æ—Å—Ç—å    ":"Ubiquity","–ü—Ä–µ–Ω–µ–±—Ä–µ–∂–µ–Ω–∏–µ     ":"Neglect","–ê–ø–µ–ª–ª—è—Ü–∏—è, –æ–±–∂–∞–ª–æ–≤–∞–Ω–∏–µ     ":"Appeal"}
    print("–∏–≥—Ä–∞ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ —Ç–æ–º —á—Ç–æ –≤–∞–º –¥–∞–µ—Ç—Å—è —Å–ª–æ–≤–æ –∏ –≤—ã –¥–æ–ª–∂–Ω—ã –µ–≥–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –Ω–∞ –∞–Ω–≥–ª–∏—Å–∫–∏–π —è–∑—ã–∫ —Å–∫–∞–∑–∞—Ç—å –ª–∏—é–æ –Ω–∞–ø–∏—Å–∞—Ç—å.")
    game = input("–≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–≥—Ä–∞—Ç—å, –µ—Å–ª–∏ –ø–∏—Å–∞—Ç—å —Ç–æ 1 –µ—Å–ª–∏ –≥–æ–≤–æ—Ä–∏—Ç—å —Ç–æ 2:   ")
    level = input("—Ç–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ —Å–ª–æ–∂–Ω–æ—Å—Ç—å. \n"
                    "–ª–µ–≥–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –ø–∏—à–∏—Ç–µ -- 1 \n" \
                    "—Å—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å –ø–∏—à–∏—Ç–µ -- 2 \n" \
                    "—Å–ª–æ–∂–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –ø–∏—à–∏—Ç–µ -- 3 \n"
                )

    if game == "1":
        if level == "1":
            print("–Ω–∞—á–∏–Ω–∞–µ–º!")
            for i in range(8):
                iop = input(random.choice(list(level1.keys())))
                if iop == level1.values():
                    print("–ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
                    couns += 2
                else:
                    print("–Ω–µ–≤–µ—Ä–Ω–æ")
                    couns += 0
            print(couns)

        elif level == "2":
            print("–Ω–∞—á–∏–Ω–∞–µ–º!")
            for i in range(8):
                iop2 = input(random.choice(list(level2.keys())))
                if iop2 == level2.values():
                    print("–ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
                    couns += 4
                else:
                    print("–Ω–µ–≤–µ—Ä–Ω–æ")
                    couns += 0
            print(couns)

        elif level == "3":
            print("–Ω–∞—á–∏–Ω–∞–µ–º!")
            for i in range(8):
                iop3 = input(random.choice(list(level3.keys())))
                if iop3 == level3.values():
                    print("–ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
                    couns += 6
                else:
                    print("–Ω–µ–≤–µ—Ä–Ω–æ")
                    couns += 0
            print(couns)
    
    elif game == "2":
        print("–Ω–∞—á–Ω–µ–º!")
        if level == "1":
            for i in range(8):
                iop2 = random.choice(list(level1.keys()))
                print(iop2)
                print("–ì–æ–≤–æ—Ä–∏...‚î¨‚î¥‚î¨‚î¥‚î§(ÔΩ•_‚îú‚î¨‚î¥‚î¨‚î¥")
                recording = sd.rec(
                            int(duration * sample_rate), # –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–∏—Å–∏ –≤ —Å—ç–º–ø–ª–∞—Ö
                            samplerate=sample_rate,      # —á–∞—Å—Ç–æ—Ç–∞ –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏
                            channels=1,                  # 1 ‚Äî —ç—Ç–æ –º–æ–Ω–æ
                            dtype="int16")               # —Ñ–æ—Ä–º–∞—Ç –∞—É–¥–∏–æ–¥–∞–Ω–Ω—ã—Ö
                sd.wait()  # –∂–¥—ë–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏
                wav.write("output.wav", sample_rate, recording)
                #print("–ó–∞–ø–∏—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∞, —Ç–µ–ø–µ—Ä—å —Ä–∞—Å–ø–æ–∑–Ω–∞—ë–º...")
                recognizer = sr.Recognizer()
                with sr.AudioFile("output.wav") as source:
                    audio = recognizer.record(source)

                try:
                    text = recognizer.recognize_google(audio, language="en-EN")
                    
                    #print("–¢—ã —Å–∫–∞–∑–∞–ª:", text)
                except sr.UnknownValueError:             # - –µ—Å–ª–∏ Google –Ω–µ –ø–æ–Ω—è–ª —Ä–µ—á—å (—à—É–º, –º–æ–ª—á–∞–Ω–∏–µ)
                    print("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å.")
                except sr.RequestError as e:             # - –µ—Å–ª–∏ –Ω–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –∏–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
                    print(f"–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞: {e}")

                if level1[iop2] == text:
                    print("–ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
                    couns += 2
                else:
                    print("–Ω–µ–≤–µ—Ä–Ω–æ")
                    couns += 0
            print(couns)
        
        elif level == "2":
            for i in range(8):
                iop2 = random.choice(list(level2.keys()))
                print(iop2)
                print("–ì–æ–≤–æ—Ä–∏...‚î¨‚î¥‚î¨‚î¥‚î§(ÔΩ•_‚îú‚î¨‚î¥‚î¨‚î¥")
                recording = sd.rec(
                            int(duration * sample_rate), # –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–∏—Å–∏ –≤ —Å—ç–º–ø–ª–∞—Ö
                            samplerate=sample_rate,      # —á–∞—Å—Ç–æ—Ç–∞ –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏
                            channels=1,                  # 1 ‚Äî —ç—Ç–æ –º–æ–Ω–æ
                            dtype="int16")               # —Ñ–æ—Ä–º–∞—Ç –∞—É–¥–∏–æ–¥–∞–Ω–Ω—ã—Ö
                sd.wait()  # –∂–¥—ë–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏
                wav.write("output.wav", sample_rate, recording)
                #print("–ó–∞–ø–∏—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∞, —Ç–µ–ø–µ—Ä—å —Ä–∞—Å–ø–æ–∑–Ω–∞—ë–º...")
                recognizer = sr.Recognizer()
                with sr.AudioFile("output.wav") as source:
                    audio = recognizer.record(source)

                try:
                    text = recognizer.recognize_google(audio, language="en-EN")
                    #print("–¢—ã —Å–∫–∞–∑–∞–ª:", text)
                except sr.UnknownValueError:             # - –µ—Å–ª–∏ Google –Ω–µ –ø–æ–Ω—è–ª —Ä–µ—á—å (—à—É–º, –º–æ–ª—á–∞–Ω–∏–µ)
                    print("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å.")
                except sr.RequestError as e:             # - –µ—Å–ª–∏ –Ω–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –∏–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
                    print(f"–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞: {e}")

                if level1[iop2] == text:
                    print("–ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
                    couns += 4
                else:
                    print("–Ω–µ–≤–µ—Ä–Ω–æ")
                    couns += 0
            print(couns)

        elif level == "3":
            for i in range(8):
                iop2 = random.choice(list(level3.keys()))
                print(iop2)
                print("–ì–æ–≤–æ—Ä–∏...‚î¨‚î¥‚î¨‚î¥‚î§(ÔΩ•_‚îú‚î¨‚î¥‚î¨‚î¥")
                recording = sd.rec(
                            int(duration * sample_rate), # –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–∏—Å–∏ –≤ —Å—ç–º–ø–ª–∞—Ö
                            samplerate=sample_rate,      # —á–∞—Å—Ç–æ—Ç–∞ –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏
                            channels=1,                  # 1 ‚Äî —ç—Ç–æ –º–æ–Ω–æ
                            dtype="int16")               # —Ñ–æ—Ä–º–∞—Ç –∞—É–¥–∏–æ–¥–∞–Ω–Ω—ã—Ö
                sd.wait()  # –∂–¥—ë–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏
                wav.write("output.wav", sample_rate, recording)
                #print("–ó–∞–ø–∏—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∞, —Ç–µ–ø–µ—Ä—å —Ä–∞—Å–ø–æ–∑–Ω–∞—ë–º...")
                recognizer = sr.Recognizer()
                with sr.AudioFile("output.wav") as source:
                    audio = recognizer.record(source)

                try:
                    text = recognizer.recognize_google(audio, language="en-EN")
                 
                    #print("–¢—ã —Å–∫–∞–∑–∞–ª:", text)
                except sr.UnknownValueError:             # - –µ—Å–ª–∏ Google –Ω–µ –ø–æ–Ω—è–ª —Ä–µ—á—å (—à—É–º, –º–æ–ª—á–∞–Ω–∏–µ)
                    print("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å.")
                except sr.RequestError as e:             # - –µ—Å–ª–∏ –Ω–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –∏–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
                    print(f"–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞: {e}")

                if level1[iop2] == text:
                    print("–ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
                    couns += 6
                else:
                    print("–Ω–µ–≤–µ—Ä–Ω–æ")
                    couns += 0
            print(couns)
